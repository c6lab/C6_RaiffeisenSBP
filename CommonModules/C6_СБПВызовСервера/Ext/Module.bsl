// (c) 2021 C6 Lab, Ramona Orlova, http://c6lab.org
// Все права сохранены.
////////////////////////////////////////////////////////////////////////////////

//
Функция ПолучитьНастройки(Параметры) Экспорт
	Перем Рез;
	Перем Ссылка;
	Рез = Новый Структура;
	//Ссылка = ПланыОбмена.C6_СБПНастройки.НайтиПоРеквизиту("Организация", Параметры.Организация);
	Ссылка = ПланыОбмена.C6_СБПНастройки.НайтиПоРеквизиту("Магазин", Параметры.Магазин);
	Если (Ссылка.Пустая()) Тогда
		Ссылка = ПланыОбмена.C6_СБПНастройки.ЭтотУзел();
	КонецЕсли;
	Если (НЕ ПустаяСтрока(Ссылка.Токен)) Тогда
		//Сообщить(Ссылка.МерчантИд);
		Рез.Вставить("Хост", СокрЛП(Ссылка.Хост));
		Рез.Вставить("Токен", СокрЛП(Ссылка.Токен));
		Рез.Вставить("МерчантИд", СокрЛП(Ссылка.МерчантИд));
		// Луара
		//Рез.Вставить("РасчСчет", "40702810403000022573"); // Дима: Счет пока один, справочника нет.
		Рез.Вставить("РасчСчет", СокрЛП(Ссылка.НомерРасчСчета));
	Иначе
		//Тестовые данные(доступ в тестовую среду):
		Рез.Вставить("Хост", "test.ecom.raiffeisen.ru");
		Рез.Вставить("МерчантИд", "MA773792");
		Рез.Вставить("Токен", "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJNQTc3Mzc5MiIsImp0aSI6IjEyODlhYjQ4LTg2ZGQtNGU0OS1hYWExLTYzYTAzOGI5YTI1MSJ9.Tyj6PioCYMDLlOoEylceplnCvkAdGdAbApLLjVqKhkI");
		Рез.Вставить("РасчСчет", "12345678901234567890");
	КонецЕсли;
	Возврат Рез;
КонецФункции

//
Функция НайтиНастройки() Экспорт
	//to do - добавить элемент, если не найден
	Возврат ПланыОбмена.C6_СБПНастройки.НайтиПоРеквизиту("Магазин", ПараметрыСеанса.ТекущийМагазин);
КонецФункции

//
Функция НастройкиИмяПорта() Экспорт
	Возврат НайтиНастройки().ИмяПорта;
КонецФункции

//
Функция ЗапомнитьНастройкиИмяПорта(Знач ИмяПорта) Экспорт
	Перем Рез;
	Перем Настройки, Объект;
	Рез = Ложь;
	Настройки = НайтиНастройки();
	Если(ЗначениеЗаполнено(Настройки)) Тогда
		Объект = Настройки.ПолучитьОбъект();
		Объект.ИмяПорта = ИмяПорта;
		Объект.Записать();
		Рез = Истина;
	КонецЕсли;
	Возврат Рез;
КонецФункции

//
Функция ВернутьИнформациюПоЧекуККМ(Рез) Экспорт
	Перем Список, Элемент;
	Перем КодОплаты;
	Рез.Вставить("КодСклада", СокрЛП(Рез.Магазин.Код));
	Если (Рез.Свойство("ЧекККМПродажа")) Тогда
		Рез.Вставить("НомерДокПродажи", Рез.ЧекККМПродажа.Номер);
	КонецЕсли;
	Рез.Вставить("КодСклада", СокрЛП(Рез.Магазин.Код));
	Список = Новый Массив;
	Для Каждого Элемент Из Рез.СписокАртикулов Цикл
		Список.Добавить(СокрЛП(Элемент.Артикул));
	КонецЦикла;
	Рез.СписокАртикулов = Список;
	Рез.ЕстьКодОплаты = ЕстьКодОплаты(?(Рез.Свойство("ЧекККМПродажа"), Рез.ЧекККМПродажа,  Рез.Ссылка), КодОплаты);
	Рез.КодОплаты = КодОплаты;
	Возврат Рез;
КонецФункции

//
//Процедура ДобавитьОплатуПоВидуВЧек(КонтФормы, Знач СуммаОплаты) Экспорт
//	Перем ДокОбъект, НоваяСтрока;
//	ДокОбъект = КонтФормы.РеквизитФормыВЗначение("Объект");
//	// сначала надо проверить, что оплата еще не добавлена!
//	НоваяСтрока = ДокОбъект.Оплата.Добавить();
//	НоваяСтрока.Сумма = СуммаОплаты;
//	НоваяСтрока.ВидОплаты = Справочники.ВидыОплатЧекаККМ.НайтиПоРеквизиту("ТипОплаты", Перечисления.ТипыОплатЧекаККМ.БанковскийПлатеж);
//	НоваяСтрока.ДанныеПереданыВБанк = Истина;
//	КонтФормы.ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
//КонецПроцедуры

//
Функция ВернутьВидОплатыДляСБП() Экспорт
	Возврат Справочники.ВидыОплатЧекаККМ.НайтиПоРеквизиту("ТипОплаты", Перечисления.ТипыОплатЧекаККМ.БанковскийПлатеж);
КонецФункции

//
Функция ЕстьКодОплаты(Ссылка, КодОплаты = 0) Экспорт
	Перем Рез;
	Перем НаборЗаписей;
	НаборЗаписей = РегистрыСведений.C6_СБПСтатусыКодов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументОснование.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	Если (НаборЗаписей.Количество() > 0) Тогда
		КодОплаты = НаборЗаписей[0].КодОплаты;
		Рез = Истина;
	Иначе
		Рез = Ложь;
	КонецЕсли;
	Возврат Рез;
КонецФункции

//
Функция ВернутьURLКодаОплаты(КодОплаты) Экспорт
	Перем Рез;
	Перем НаборЗаписей;
	НаборЗаписей = РегистрыСведений.C6_СБПСтатусыКодов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.КодОплаты.Установить(КодОплаты);
	НаборЗаписей.Прочитать();
	Если (НаборЗаписей.Количество() > 0) Тогда
		Рез = НаборЗаписей[0].URLКодаОплаты;
	Иначе
		Рез = "";
	КонецЕсли;
	Возврат Рез;
КонецФункции

//
Функция ВернутьСтатусКодаСБП(Ссылка, КодОплаты, Результат) Экспорт
	Перем Рез;
	Перем НаборЗаписей;
	Рез = Ложь;
	Результат = Новый Структура("Ссылка,КодОплаты,ДатаСоздания,СтатусКодаОплаты,ДатаОплаты,Сумма,ИзображениеКодаОплаты,URLКодаОплаты,ТранзакцияОплаты");
	Результат.Ссылка = Ссылка;
	Результат.КодОплаты = КодОплаты;
	НаборЗаписей = РегистрыСведений.C6_СБПСтатусыКодов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументОснование.Установить(Ссылка);
	НаборЗаписей.Отбор.КодОплаты.Установить(КодОплаты);
	НаборЗаписей.Прочитать();
	Если (НаборЗаписей.Количество() > 0) Тогда
		Результат.ДатаСоздания = НаборЗаписей[0].ДатаСоздания;
		Результат.СтатусКодаОплаты = НаборЗаписей[0].СтатусКодаОплаты;
		Результат.ДатаОплаты = НаборЗаписей[0].ДатаОплаты;
		Результат.Сумма = НаборЗаписей[0].Сумма;
		Результат.ИзображениеКодаОплаты = Новый Картинка (НаборЗаписей[0].ИзображениеКодаОплаты.Получить());
		Результат.URLКодаОплаты = НаборЗаписей[0].URLКодаОплаты;
		Результат.ТранзакцияОплаты = НаборЗаписей[0].ТранзакцияОплаты;
		Рез = Истина;
	КонецЕсли;
	Возврат Рез;
КонецФункции

//
// Параметры
//	Ссылка - ссылка на документ
//	КодОплаты - qrId (строка)
//	ДатаСоздания - createDate платежа (дата/время 1С)
//	СтатусКодаОплаты - paymentStatus (строка)
//	ДатаОплаты - transactionDate (дата/время 1С)
//	Сумма - amount кода и платежа (число)
//	ИзображениеКодаОплаты - загруженный qrUrl (картинка 1С)
//	URLКодаОплаты - payload (строка)
//	ТранзакцияОплаты - transactionId (строка(
Процедура ОбновитьСтатусКодаСБП(Параметры) Экспорт
	Перем НаборЗаписей;
	НаборЗаписей = РегистрыСведений.C6_СБПСтатусыКодов.СоздатьНаборЗаписей();
	//Сообщить(Параметры.Ссылка);
	НаборЗаписей.Отбор.ДокументОснование.Установить(Параметры.Ссылка);
	НаборЗаписей.Отбор.КодОплаты.Установить(Параметры.КодОплаты);
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ДокументОснование = Параметры.Ссылка;
	НоваяЗапись.КодОплаты = Параметры.КодОплаты;
	НоваяЗапись.ДатаСоздания = Параметры.ДатаСоздания;
	НоваяЗапись.СтатусКодаОплаты = ?((ТипЗнч(Параметры.СтатусКодаОплаты) = Тип("Строка")), Перечисления.C6_СБПСтатусыКодовОплаты[Параметры.СтатусКодаОплаты], Параметры.СтатусКодаОплаты);
	НоваяЗапись.ДатаОплаты = Параметры.ДатаОплаты;
	НоваяЗапись.Сумма = Параметры.Сумма;
	НоваяЗапись.ИзображениеКодаОплаты = Новый ХранилищеЗначения(Параметры.ИзображениеКодаОплаты.ПолучитьДвоичныеДанные());
	НоваяЗапись.URLКодаОплаты = Параметры.URLКодаОплаты;
	НоваяЗапись.ТранзакцияОплаты = Параметры.ТранзакцияОплаты;
	НаборЗаписей.Записать(Истина);
	//ДвоичныеДанные = Картинка.ПолучитьДвоичныеДанные();
	//ПечатьЧерноБелая = Новый ХранилищеЗначения(ДвоичныеДанные);
КонецПроцедуры
